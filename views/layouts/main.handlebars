<!DOCTYPE html>

<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css">
  <link href="https://fonts.googleapis.com/css?family=Nunito:300,700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/styles/styles.css" media="screen" title="no title" charset="utf-8">
  <link rel="stylesheet" href="/styles/styles-scss.css" media="screen" title="no title" charset="utf-8">
  <script src="https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.js"></script>
  <title>Home Page</title>
</head>

<body>
  {{{body}}}
  <script src="https://code.jquery.com/jquery.js"></script>
  <script src="/js/three.min.js"></script>
  <script src="/js/oreProbs.js"></script>
  <script>
    let scene, camera, renderer, stars, starGeo;

    function init() {

      scene = new THREE.Scene();

      camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);
      camera.position.z = 1;
      camera.rotation.x = Math.PI / 2;

      renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      starGeo = new THREE.Geometry();
      for (let i = 0; i < 6000; i++) {
        star = new THREE.Vector3(
          Math.random() * 600 - 300,
          Math.random() * 600 - 300,
          Math.random() * 600 - 300
        );
        star.velocity = 0;
        star.acceleration = 0.001;
        starGeo.vertices.push(star);
      }

      let sprite = new THREE.TextureLoader().load('/img/star.png');
      let starMaterial = new THREE.PointsMaterial({
        color: 0xaaaaaa,
        size: 0.7,
        map: sprite
      });

      stars = new THREE.Points(starGeo, starMaterial);
      scene.add(stars);

      window.addEventListener("resize", onWindowResize, false);

      animate();
    }
    function onWindowResize() {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    }
    function animate() {
      starGeo.vertices.forEach(p => {
        p.velocity += p.acceleration
        p.y -= p.velocity;

        if (p.y < -200) {
          p.y = 200;
          p.velocity = 0;
        }
      });
      starGeo.verticesNeedUpdate = true;
      stars.rotation.y += 0.002;

      renderer.render(scene, camera);
      requestAnimationFrame(animate);
    }
    init();
  </script>
</body>

</html>